C51 COMPILER V9.54   MAIN                                                                  09/25/2023 19:48:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE USER\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HARDWARE\kayboard;.\HARDWA
                    -RE\LED;.\SYSTEM\Delay;.\SYSTEM\music;.\SYSTEM\Timer;.\SYSTEM\51sys) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT
                    -(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          #include "Delay.h"
   4          #include "Timer0.h"
   5          #include "music.h"
   6          #include "keyboard.h"
   7          #include "LED.h"
   8          
   9          //蜂鸣器端口定义
  10          sbit Buzzer = P1^5;
  11          sbit keypause = P3^2;
  12          sbit keyspeed = P3^3;
  13          
  14          uchar MusicSelect = 0,LEDMusicSelect = 0;//音乐表
  15          uchar FreqSelect;//频率
  16          uint location = 1;//数码管位选码
  17          
  18          uchar changemusic = 0x00;//歌曲选择
  19          uint SPEED = noteSPEED;//播放速度
  20          uint speedflag = 1; 
  21          
  22          bit flag = 0x00;//音乐暂停播放标志位
  23          
  24          void main() 
  25          {
  26   1              Timer0Init();
  27   1              Timer1Init();
  28   1              Exti0Init();
  29   1              Exti1Init();
  30   1              TR0 = 0;
  31   1              TR1 = 0;
  32   1              while(1)
  33   1              {               
  34   2                      if(flag == 0x01)
  35   2                      {
  36   3                              if(Music[changemusic][MusicSelect][0] != 0xFF)  //如果不是停止标志位
  37   3                              {
  38   4                                      FreqSelect=Music[changemusic][MusicSelect][0];  //选择音符对应的频率
  39   4                                      Delay(SPEED/4*Music[changemusic][MusicSelect][1]);      //选择音符对应的时值
  40   4                                      MusicSelect++;
  41   4                                      
  42   4                                      TR0 = 0;
  43   4                                      Delay(10);
  44   4                                      TR0 = 1;
  45   4                                      
  46   4                                      if(Music[changemusic][MusicSelect][0] == 0xFF)  //如果是停止标志位
  47   4                                      {
  48   5                                              TR0 = 0;
  49   5                                              TR1 = 0;
  50   5                                              MusicSelect = 0;
  51   5                                              flag = 0;
  52   5                                      }
  53   4                              }       
C51 COMPILER V9.54   MAIN                                                                  09/25/2023 19:48:42 PAGE 2   

  54   3                      }
  55   2      
  56   2                      else if(input() != 0)//判断是否有按键按下并返回FreqSelect
  57   2                      {
  58   3                              Delay(500);//等待 音符或频率模式 播放完毕
  59   3                              TR0 = 0;
  60   3                              FreqSelect = 0;
  61   3                      }
  62   2              }
  63   1      }
  64          
  65          void pause() interrupt 0        //音乐暂停
  66          {
  67   1              if(keypause == 0)
  68   1              {
  69   2                      Delay(10);
  70   2                      if(keypause == 0)
  71   2                      {
  72   3                              flag = !flag;
  73   3                              TR1 = flag;
  74   3                              while(!keypause);
  75   3                      }
  76   2              }
  77   1      }
  78          
  79          void musicspeed() interrupt 2   //音乐速度
  80          {
  81   1              if(keyspeed == 0)
  82   1              {
  83   2                      Delay(10);
  84   2                      if(keyspeed == 0)
  85   2                      {
  86   3                              speedflag++;
  87   3                              SPEED = SPEED/speedflag;
  88   3                              if(speedflag == 3)      //两档调速
  89   3                              {
  90   4                                      speedflag = 1;
  91   4                                      SPEED = noteSPEED;
  92   4                              }
  93   3                              while(!keyspeed);
  94   3                      }
  95   2              }
  96   1      }
  97          
  98          void Timer0_Routine() interrupt 1       //音乐播放中断
  99          {
 100   1              if(FreqTable[FreqSelect])       //如果不是休止符
 101   1              {
 102   2                      /*取对应频率值的重装载值到定时器*/
 103   2                      TL0 = FreqTable[FreqSelect]%256;                //设置定时初值
 104   2                      TH0 = FreqTable[FreqSelect]/256;                //设置定时初值
 105   2                      Buzzer=!Buzzer; //翻转蜂鸣器IO口
 106   2              }
 107   1      }
 108          
 109          void Timer1_Routine() interrupt 3       //LED显示中断
 110          {
 111   1              P0 = 0x00;                      //段码清0，消影
 112   1              TR1 = 0;                        //定时器1停止计时
 113   1              TL1 = 0x66;                     //设置定时初值1ms
 114   1              TH1 = 0xFC;             
 115   1              
C51 COMPILER V9.54   MAIN                                                                  09/25/2023 19:48:42 PAGE 3   

 116   1              if(Music[changemusic][MusicSelect][0] != 0xFF)  //如果不是休止符
 117   1              {
 118   2                      /*歌词显示*/
 119   2                      if(LEDMusicSelect<=121) //防止最后音符位数不足导致LED乱码
 120   2                      {
 121   3                              led_display(location,Music[changemusic][LEDMusicSelect][2]);//歌词动态显示
 122   3                      }
 123   2      
 124   2                      location ++;
 125   2                      LEDMusicSelect++;
 126   2                      
 127   2                      /*歌词随动显示*/
 128   2                      if(LEDMusicSelect > (MusicSelect + 1))  //数码管显示位数等于歌唱音符位数+1
 129   2                      {
 130   3                              P0=0x00;        //中断为给低电平调节占空比实现PWM效果
 131   3                      }
 132   2                      
 133   2                      /*动态显示*/
 134   2                      if(location == 9)       //LED八位显示完毕重置位选码
 135   2                      {
 136   3                              location = 1;
 137   3                              LEDMusicSelect = LEDMusicSelect - 8;
 138   3                              if(MusicSelect % 8 == 0)
 139   3                              {
 140   4                                      LEDMusicSelect = MusicSelect;
 141   4                              }
 142   3                      }
 143   2              }
 144   1              TR1 = 1;                //定时器1开始计时               
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    648    ----
   CONSTANT SIZE    =    726    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     84    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
